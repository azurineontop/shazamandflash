--// Protected by Karrot 1.0 - discord.gg/vPY3XmntKU

return (function()local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIllllI=269;local karrotlIIlllIl=138;local karrotlIIlllII=3;local karrotlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local karrotlIIlllIl=290;local karrotlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local karrotlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIIl="\104\78\90\56\110\71\120\101\74\113\78\48\106\80\111\57\112\54\118\86\47\74\73\69\106\115\55\72\101\88\47\51\102\72\66\71\88\119\116\99\48\98\50\47\47\80\104\87\104\66\101\118\66\72\70\85\109\112\110\80\108\86\87\106\101\73\57\70\117\88\48\120\99\109\47\121\67\104\83\108\108\78\69\51\89\75\51\106\101\82\57\70\86\88\68\84\51\116\109\78\48\118\71\49\111\50\88\121\122\47\79\70\47\71\121\56\102\88\51\122\54\53\102\101\66\98\119\48\55\82\104\54\120\98\67\73\122\101\98\101\68\79\53\102\77\72\56\88\109\121\80\72\47\90\48\74\120\104\85\109\85\118\67\67\51\53\68\88\111\66\76\101\85\78\43\112\111\65\43\43\70\87\74\122\119\108\50\67\68\116\73\78\112\43\84\90\100\76\43\85\71\99\50\85\82\66\53\119\119\84\107\98\76\74\99\106\115\98\89\87\110\71\75\100\121\75\82\87\77\53\111\115\116\97\75\67\107\99\101\73\86\111\69\53\77\69\119\122\84\72\56\109\53\52\57\71\111\54\73\104\52\107\47\65\106\67\69\51\43\114\57\66\85\117\53\50\122\70\120\49\53\106\57\115\97\100\107\121\73\121\66\98\70\112\81\85\120\66\69\122\81\82\107\69\65\70\49\109\80\111\107\49\111\104\53\55\116\55\52\67\120\47\114\121\112\87\97\108\65\87\47\103\48\83\111\77\49\47\56\121\66\97\108\81\117\109\56\117\88\51\83\102\109\110\86\117\109\112\49\54\43\47\114\110\88\79\74\54\51\82\56\102\71\86\120\88\121\73\56\51\107\86\116\51\118\88\55\102\50\43\105\87\87\103\71\120\101\50\117\121\90\77\83\113\80\74\84\55\79\79\67\55\103\75\49\88\108\114\85\56\51\52\52\111\77\102\108\112\108\85\43\118\55\51\47\83\47\105\50\106\72\113\76\118\48\48\73\103\114\78\80\98\102\118\50\120\102\69\122\47\116\88\87\98\118\110\122\56\72\112\67\49\43\97\114\115\112\52\66\120\109\114\70\120\80\69\118\71\85\79\72\72\118\48\103\86\97\103\85\80\116\51\43\80\49\56\113\43\77\90\47\67\108\100\106\70\112\108\88\120\117\106\109\88\100\112\108\43\69\99\71\109\119\103\55\76\120\104\54\107\56\114\76\57\100\116\104\76\99\57\111\89\77\69\111\54\77\53\66\53\102\86\114\90\71\80\113\90\99\52\66\120\49\122\66\57\122\83\67\73\77\119\81\53\112\107\74\82\115\55\48\65\66\71\97\66\106\97\55\101\43\90\110\57\53\115\68\87\105\104\71\107\82\121\50\109\70\43\103\73\56\57\68\111\107\113\106\69\50\66\87\119\120\104\70\120\43\52\70\70\109\73\110\117\117\68\80\88\77\54\43\67\73\116\118\86\84\76\107\80\82\75\97\115\71\117\79\70\74\43\66\122\90\57\57\50\48\70\120\100\102\67\107\76\104\82\51\78\90\72\106\84\74\118\108\78\51\101\48\118\84\103\105\71\56\72\48\90\88\114\87\117\119\102\72\112\111\53\103\84\112\66\121\82\87\106\104\79\109\87\111\57\108\115\73\74\85\77\72\73\65\117\106\54\97\83\80\75\50\112\50\57\70\105\101\71\104\101\104\104\118\122\104\66\117\81\83\48\68\111\88\119\65\110\78\43\54\105\111\81\90\68\84\47\115\119\120\75\50\103\116\102\98\73\75\119\52\113\88\76\110\75\108\84\98\120\86\101\84\85\82\66\113\75\74\47\122\66\68\117\111\85\77\109\66\110\84\119\105\66\55\76\71\55\103\69\73\86\52\80\97\87\113\84\50\74\108\100\116\110\110\99\119\79\103\73\50\66\52\48\70\111\48\75\113\119\83\98\110\66\88\98\67\72\86\69\88\109\105\111\84\99\43\112\119\49\57\108\109\77\51\67\55\82\51\86\108\52\112\103\74\86\83\115\112\70\122\122\52\100\82\55\112\73\55\87\108\76\99\88\55\104\49\100\106\80\113\72\83\120\120\65\48\51\104\52\76\55\54\100\85\114\77\68\110\119\100\88\118\102\48\54\51\111\50\120\110\106\68\99\85\117\97\52\121\81\106\118\114\113\54\86\71\111\66\55\88\57\47\97\84\76\66\67\108\118\71\48\122\88\56\98\122\106\104\87\54\104\121\109\86\68\100\100\115\118\112\118\57\98\74\68\114\56\107\109\115\48\120\108\43\52\69\49\84\71\120\79\52\111\49\85\47\80\66\99\116\118\103\71\112\100\43\81\101\111\75\98\116\121\114\74\47\66\87\68\85\83\56\107\115\114\119\85\48\112\112\121\71\98\78\57\70\108\117\119\89\77\82\103\73\120\75\97\114\114\55\78\48\103\114\82\68\109\50\81\51\107\78\119\65\47\66\71\99\87\100\68\54\78\82\48\76\86\75\84\66\116\53\85\111\77\108\83\99\103\98\49\122\67\57\110\82\87\118\53\72\87\113\56\89\48\78\114\84\52\120\68\101\43\67\50\120\83\101\76\82\86\67\51\50\102\66\100\122\84\83\66\68\54\57\50\97\73\74\65\70\115\68\53\54\88\89\122\81\89\52\98\75\116\80\81\89\100\117\119\102\71\88\71\54\48\51\119\83\51\115\70\109\81\99\118\120\82\90\68\86\111\120\120\67\54\113\83\82\105\87\73\72\75\57\79\88\54\121\110\110\53\98\66\57\74\104\72\51\54\86\117\57\55\116\102\122\84\97\102\108\113\90\120\121\88\48\106\112\65\105\55\56\111\110\50\48\110\86\79\54\81\67\51\103\47\107\73\86\85\72\117\71\117\43\54\113\73\90\49\120\53\104\119\50\53\57\68\79\67\108\80\106\83\66\106\117\118\48\118\69\47\97\104\89\122\54\76\116\109\67\82\88\102\49\110\47\55\98\104\103\83\56\109\80\109\66\68\76\82\97\80\119\76\72\50\84\111\102\57\73\51\122\90\109\82\77\49\97\72\107\102\84\50\100\121\116\72\90\50\48\86\74\88\49\120\111\90\56\74\86\119\85\68\99\50\108\51\72\85\107\112\55\55\54\79\98\107\71\87\70\48\67\115\118\87\98\106\111\105\108\112\115\50\48\65\43\54\56\72\68\55\103\67\83\69\114\70\47\119\80\69\81\113\78\112\56\50\112\103\117\79\98\90\101\107\55\99\53\98\80\120\79\55\110\113\108\99\118\80\103\88\77\122\99\83\86\53\100\65\116\114\48\81\75\114\107\82\115\109\110\51\113\68\82\81\55\118\81\53\114\43\77\86\108\108\67\86\80\113\55\106\72\83\54\106\73\81\80\116\75\75\76\117\87\47\108\104\50\67\69\88\100\113\108\87\51\119\98\82\51\89\86\65\54\65\89\86\88\68\121\120\120\80\72\75\104\54\119\120\77\55\71\108\114\72\75\78\43\84\68\76\72\49\72\75\106\120\72\120\53\75\120\50\66\105\72\122\71\43\50\115\49\90\121\90\113\73\72\80\74\112\84\68\78\112\90\99\108\49\101\109\53\81\78\68\70\80\43\85\78\72\116\70\101\102\52\78\80\109\47\82\74\111\110\50\52\116\70\57\121\99\104\103\118\87\122\43\84\77\116\103\98\111\101\108\107\85\48\82\76\73\75\72\88\79\82\73\97\43\118\87\50\101\113\87\122\108\101\89\70\107\97\78\85\53\114\78\114\81\67\99\99\120\55\69\88\85\70\50\121\85\79\48\52\67\47\118\82\104\90\71\116\55\78\106\74\55\48\79\79\50\98\82\69\111\87\86\43\89\83\57\49\74\52\89\81\66\84\100\121\103\83\72\121\118\48\89\47\67\56\105\83\78\117\74\86\105\65\78\89\90\110\118\87\113\74\110\88\89\97\75\73\57\117\79\57\103\105\68\83\68\113\80\85\50\43\116\50\68\112\119\106\119\106\70\87\80\79\74\114\76\86\108\76\83\116\118\105\67\105\69\116\57\67\115\121\104\99\117\110\53\67\114\108\74\47\122\52\70\105\53\48\120\114\51\122\47\116\73\77\56\97\115\71\71\108\107\103\73\87\78\70\56\78\85\113\74\43\66\116\73\48\102\43\110\105\75\121\52\68\51\49\53\71\107\75\51\101\109\104\84\106\110\105\111\83\67\90\113\65\119\104\51\66\72\69\49\67\68\72\106\101\88\121\100\103\50\99\83\49\120\55\56\108\114\107\110\81\117\116\84\78\79\117\99\117\90\86\54\102\118\54\82\118\87\112\88\52\75\84\89\122\84\84\78\67\85\100\114\107\67\84\103\47\82\51\116\86\73\81\119\102\102\50\71\115\115\112\112\81\108\77\51\110\66\121\85\118\81\56\97\73\69\112\77\85\80\113\80\112\48\122\85\122\115\55\108\87\82\100\65\117\78\51\89\85\88\50\49\85\56\104\76\122\69\74\102\84\66\66\106\116\112\55\122\112\118\74\74\111\48\52\74\119\111\80\53\74\108\103\48\110\79\113\112\86\48\51\112\116\101\122\109\97\116\52\101\49\70\114\88\75\53\109\87\86\118\82\103\113\72\54\108\108\78\98\55\54\70\119\47\107\76\71\119\112\52\111\90\90\72\116\67\114\115\76\83\104\54\101\86\108\49\55\117\57\55\121\78\43\85\68\70\114\101\114\68\57\100\101\67\66\105\112\105\48\81\68\49\117\98\43\76\75\100\47\118\106\83\122\116\75\119\67\90\99\66\69\70\79\43\73\50\115\86\87\53\71\98\116\77\80\104\100\90\99\80\81\87\89\80\43\120\104\70\65\112\52\115\103\76\81\54\72\70\122\115\65\117\85\85\70\82\87\47\72\89\76\73\115\76\76\102\69\108\101\107\47\101\48\102\102\72\106\76\75\105\82\115\97\55\80\118\112\49\107\86\89\109\83\115\48\111\89\48\110\120\108\65\118\106\81\83\107\98\108\67\89\80\98\98\117\110\69\98\116\105\75\47\99\87\68\90\85\120\82\71\105\74\121\47\118\85\57\100\115\87\116\99\50\68\66\50\102\82\74\98\48\117\106\75\115\89\73\47\88\84\52\78\82\110\112\55\114\55\110\47\55\98\118\73\70\56\81\121\55\79\101\53\65\71\55\105\65\53\114\97\108\101\65\88\111\108\106\86\101\48\51\108\109\116\80\80\69\107\122\69\99\77\99\116\85\118\104\118\115\122\107\81\98\115\97\80\119\50\115\74\120\57\100\108\90\90\100\120\109\74\103\119\71\104\103\78\106\87\57\68\75\86\77\49\68\116\87\79\112\56\119\82\76\112\122\108\83\119\107\103\54\122\74\90\53\49\75\119\116\115\52\98\113\114\108\68\108\103\74\121\80\53\76\84\86\43\107\103\98\70\76\102\83\117\75\122\65\103\70\107\47\55\98\85\97\79\109\54\97\101\72\75\88\107\81\51\114\90\49\81\87\90\81\77\71\103\111\83\53\102\48\97\103\99\114\71\57\54\112\75\43\49\76\117\77\121\110\120\65\110\56\88\79\87\109\84\71\71\107\112\67\53\116\65\65\47\102\80\113\107\77\67\86\106\75\53\117\111\66\99\121\54\106\74\110\112\50\120\117\73\53\68\81\50\111\103\65\75\111\49\68\86\81\86\112\122\104\53\77\74\76\114\56\55\108\111\84\104\65\104\67\122\74\121\108\83\84\55\118\83\53\109\103\115\51\112\112\43\104\75\109\78\83\68\81\104\111\51\51\105\100\89\121\78\115\56\55\56\50\99\49\76\111\119\50\107\77\113\111\47\122\76\48\110\120\79\113\43\77\52\117\54\43\71\107\80\65\83\48\120\55\98\82\77\89\117\116\87\80\119\50\67\50\111\68\103\82\66\99\90\90\57\121\99\106\74\51\84\111\102\79\118\76\72\56\103\111\80\72\108\70\87\81\122\101\98\86\89\85\107\99\68\72\82\111\81\51\68\90\108\97\79\88\65\78\68\100\121\110\107\80\89\57\43\98\67\90\121\113\79\68\99\81\87\119\72\57\103\86\70\74\77\54\109\47\105\81\71\111\122\121\100\97\97\105\118\102\49\88\56\115\74\117\71\66\73\51\100\43\118\51\114\78\119\83\81\78\100\99\104\85\54\52\116\106\97\120\57\76\56\99\115\51\83\84\102\105\119\108\50\66\99\65\98\79\112\72\74\103\90\118\117\115\70\83\73\77\113\72\103\122\56\108\47\79\66\111\49\103\52\78\108\78\99\76\107\106\87\71\109\105\82\90\47\73\76\66\47\57\110\76\68\79\74\110\80\89\83\70\85\112\72\73\106\118\65\43\83\74\110\78\107\106\112\83\122\105\54\100\112\100\54\66\120\122\43\82\72\103\100\102\43\67\80\85\85\43\97\65\121\97\120\112\72\88\116\52\54\122\113\78\98\116\101\122\103\113\112\79\113\75\68\122\113\109\113\82\122\66\68\105\83\70\105\74\117\85\71\49\89\104\99\107\49\107\121\83\105\56\121\54\55\78\78\73\74\67\121\69\84\43\76\65\109\100\108\121\54\119\66\48\121\47\110\105\116\86\74\57\55\75\71\79\120\76\118\70\78\69\72\120\43\81\101\121\103\81\73\89\66\74\71\112\122\73\68\86\97\65\82\104\49\53\78\101\120\54\48\72\122\73\86\85\76\88\52\86\53\102\57\90\67\100\50\111\67\87\117\53\111\48\65\83\87\97\72\98\78\109\119\115\90\71\75\108\89\79\101\83\106\118\98\86\56\117\111\121\69\100\85\81\113\71\116\81\102\72\52\82\81\118\65\103\100\86\52\55\66\121\70\68\106\114\80\82\80\117\107\69\88\107\52\78\77\98\76\108\104\75\87\120\86\81\98\57\67\89\55\118\90\56\116\70\49\107\108\89\78\109\65\84\82\76\87\87\104\102\78\73\106\89\117\113\53\76\48\65\108\43\49\101\56\50\87\53\83\107\52\110\52\67\106\71\53\67\122\72\43\84\101\105\98\48\105\113\89\100\55\115\106\106\78\47\83\100\73\108\117\90\53\100\79\103\54\85\84\69\105\106\71\49\103\120\48\118\86\100\111\73\47\119\84\51\80\120\67\65\122\85\76\85\55\76\99\47\121\119\83\55\54\82\116\87\114\83\56\116\122\72\66\50\112\56\79\101\67\74\73\52\78\73\71\106\99\97\89\85\70\118\83\57\118\116\115\109\122\79\103\113\56\107\115\87\114\57\52\99\84\113\108\55\48\54\79\119\110\43\121\81\103\104\122\68\83\67\86\109\72\105\116\103\98\109\99\111\114\121\69\80\72\66\100\74\108\67\72\52\55\115\108\73\83\115\120\57\107\121\113\84\107\47\115\101\103\111\101\66\68\104\51\116\107\100\97\88\90\77\114\106\119\50\90\84\43\122\112\121\99\81\98\99\71\73\86\69\102\88\108\99\74\116\113\98\49\98\113\74\103\116\82\120\109\68\77\55\85\111\81\78\104\115\106\105\90\78\122\120\57\74\88\105\67\85\81\86\49\120\85\68\90\79\108\69\73\49\53\53\114\65\114\78\85\74\108\122\74\104\76\100\52\80\108\88\121\97\101\86\107\67\88\102\78\69\84\67\104\52\121\49\66\118\89\67\104\66\114\106\115\50\47\121\54\112\50\72\52\77\101\47\90\71\71\109\49\109\113\115\81\105\80\109\108\88\120\70\103\77\82\75\90\87\97\114\86\114\51\69\119\109\56\107\78\90\108\88\121\113\107\112\67\68\81\69\53\53\120\81\81\50\88\116\84\51\80\115\79\84\120\72\77\121\117\122\101\108\79\70\113\80\49\117\67\69\89\76\43\101\97\72\50\108\102\78\115\86\68\106\107\114\43\79\98\73\99\48\76\88\105\48\122\83\89\105\84\55\107\80\57\89\116\97\68\108\67\104\74\70\85\103\56\115\82\52\87\80\104\73\82\119\76\82\74\120\83\75\69\111\98\55\104\74\66\89\89\86\104\70\49\74\100\87\71\120\97\112\76\85\117\121\98\75\69\82\86\49\43\66\121\68\50\76\113\88\79\75\107\51\53\86\47\78\57\117\114\104\76\115\109\73\74\54\87\53\70\53\100\81\65\89\70\81\89\97\107\75\110\73\53\53\111\120\78\115\52\122\77\79\43\74\83\112\73\97\113\56\87\73\86\67\105\113\57\88\89\56\54\84\65\85\115\52\82\119\121\49\72\72\120\56\89\74\71\118\52\52\67\100\80\56\77\75\88\98\56\120\104\74\55\75\50\99\121\103\80\55\115\69\105\106\110\51\102\77\85\106\49\48\120\80\47\102\57\100\109\53\104\120\119\76\113\43\75\115\98\100\122\55\75\56\72\66\102\120\110\76\108\72\122\51\50\75\55\57\120\75\80\72\68\113\66\100\83\52\107\101\110\57\122\48\86\65\65\75\52\122\109\82\111\65\52\81\118\78\89\65\65\76\120\117\71\73\47\72\47\103\97\69\74\85\72\65\108\55\65\116\56\99\106\103\106\52\101\66\49\49\120\56\72\88\121\106\57\81\118\75\105\107\84\52\106\112\81\80\56\86\78\66\114\98\84\47\53\109\97\121\90\53\103\71\80\49\85\103\56\43\65\84\116\53\100\86\86\119\109\81\88\77\69\108\122\50\82\112\49\74\114\78\72\72\69\102\88\54\76\56\49\102\118\56\67\106\113\57\122\74\77\107\75\118\81\106\90\86\117\108\68\55\102\106\97\71\47\73\120\79\79\113\79\115\108\100\104\99\73\56\53\84\90\48\97\55\74\70\74\51\98\109\87\102\121\51\86\117\74\116\102\83\74\73\90\109\76\118\49\101\67\97\111\74\83\118\107\121\54\116\51\78\78\118\77\83\105\74\98\121\72\70\82\117\119\77\65\79\87\47\70\76\104\122\73\120\111\121\52\54\87\53\65\56\86\88\47\97\119\121\117\70\57\106\83\67\54\72\101\69\86\86\48\105\107\78\43\75\104\71\48\102\112\117\55\55\98\110\89\76\80\120\85\57\83\90\53\54\54\108\90\82\79\84\122\75\56\113\67\74\82\84\79\121\89\117\84\119\104\111\116\108\50\89\70\108\81";local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIII='NGI2d3Q8YSp3KmsvYWc9K0c6dw==';local karrotlIIlIIlI=function(a,b)local c=karrotlIIlIlIl(karrotlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,karrotlIIlIllI(b))return karrotlIIlIllI(d)end;local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIII='OS5nRkJxRlY8XydZaSZ2OXdEb3t7I2EkNmcvbyxdZVYvZy86Mjg=';function karrotlIIlIlll(a,b)local c=karrotlIIlIllI(a,b);local d=karrotlIIllIlI;return c,d end;return karrotlIIlIlII(karrotlIIlIIlI(karrotlIIllIll,karrotlIIlIIIl),getfenv(0))()end)()
